import type { Node } from "unist";
export interface RemarkNode extends Node {
    children?: Array<RemarkNode>;
    visited: boolean;
}
export declare enum JsonLayout {
    AoS = "AoS",
    SoA = "SoA"
}
export type TranspilerOpts = {
    markdownString: string;
    minify?: boolean;
    layout?: JsonLayout;
};
export declare class MarkdownTable2Json {
    private readonly buffer;
    private readonly layout;
    private readonly minify;
    private readonly frozenProccesor;
    private readonly ast;
    constructor({ markdownString, layout, minify }: TranspilerOpts);
    transform(): string;
    prettyAst(): string;
    private toMarkdownString;
    private cellToString;
    private processTableAoS;
    private processTableSoA;
    private dfs;
}
